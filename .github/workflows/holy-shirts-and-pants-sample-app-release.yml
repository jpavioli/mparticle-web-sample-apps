name: Release HSnP

on:
    workflow_dispatch:
        inputs:
            dryRun:
                description: 'Do a dry run to preview instead of a real release [true/false]'
                required: true
                default: 'true'

defaults:
    run:
        working-directory: core-sdk-samples/holy-shirts-and-pants

jobs:
    # SDK release is done from public/master branch.
    confirm-main-branch:
        name: Confirm release is run on public/main branch
        runs-on: ubuntu-latest
        steps:
            - name: Git checkout
              uses: actions/checkout@v2

            - name: Branch name
              run: |
                  BRANCHNAME=${GITHUB_REF##*/}
                  echo "confirming branch name, branch name is:"
                  echo $BRANCHNAME
                  if [ $BRANCHNAME != "main" ]
                  then
                    echo "You can only run a release from the main branch, you are trying to run it from ${BRANCHNAME}"
                    exit 1
                  fi

    create-release-branch:
        name: "Create Release Branch"
        runs-on: ubuntu-18.04
        needs: confirm-main-branch
        steps:
          - name: "Checkout development branch"
            uses: actions/checkout@v2
            with:
              repository: mparticle-web-sample-apps/holy-shirts-and-pants
              ref: development
          - name: "Create and push release branch"
            run: |
              git checkout -b release/${{ github.run_number }}
              git push origin release/${{ github.run_number }}

    semantic-release:
        name: Perform Release
        runs-on: ubuntu-latest
        needs: create-release-branch
        env:
            GIT_AUTHOR_NAME: mparticle-bot
            GIT_AUTHOR_EMAIL: developers@mparticle.com
            GIT_COMMITTER_NAME: mparticle-bot
            GIT_COMMITTER_EMAIL: developers@mparticle.com

        steps:
            - name: Checkout
              uses: actions/checkout@v2

            - name: Setup Node.js
              uses: actions/setup-node@v1
              with:
                  node-version: 16.x

            - name: Merge release branch into main branch
              run: |
                git pull origin release/${{ github.run_number }}

            - name: Install dependencies
              run: npm ci

            - name: Lint with ESLint
              run: npm run lint

            - name: Lint with Prettier
              run: npm run prettier

            - name: Build Files
              run: npm run build

            - name: Run tests
              run: npm run test

            - name: Release --dry-run
              if: ${{ github.event.inputs.dryRun == 'true'}}
              env:
                  GITHUB_TOKEN: ${{ secrets.MP_SEMANTIC_RELEASE_BOT }}
              run: |
                npx \
                -p semantic-release@17 \
                -p @semantic-release/changelog@5 \
                -p @semantic-release/git@9 \
                -p @semantic-release/exec@5 \
                semantic-release --dry-run

            - name: Release
              if: ${{ github.event.inputs.dryRun == 'false'}}
              env:
                  GITHUB_TOKEN: ${{ secrets.MP_SEMANTIC_RELEASE_BOT }}
              run: |
                npx \
                -p semantic-release@17 \
                -p @semantic-release/changelog@5 \
                -p @semantic-release/git@9 \
                -p @semantic-release/exec@5 \
                semantic-release

            - name: Archive npm failure logs
              uses: actions/upload-artifact@v2
              if: failure()
              with:
                name: npm-logs
                path: ~/.npm/_logs
                
    sync-repository:
      name: Sync Repository
      needs: semantic-release
      runs-on: ubuntu-18.04
      steps:
       - name: "Checkout main branch"
         uses: actions/checkout@v2
         with:
           fetch-depth: 0
           repository: ${{ github.repository }}
           token: ${{ secrets.MP_SEMANTIC_RELEASE_BOT }}
           ref: main
       - name: Merge release branch into main branch
         if: ${{ github.event.inputs.dryRun == 'false' }}
         run: |
              git pull origin release/${{ github.run_number }}
       - name: Push release commits to main branch
         if: ${{ github.event.inputs.dryRun == 'false'}}
         run: |
           git push origin HEAD:main
           git push origin HEAD:development
       - name: Delete release branch
         if: ${{ github.event.inputs.dryRun == 'false' }}
         run: |
           git push --delete origin release/${{ github.run_number }}
